{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ExecutionService {\n  constructor() {\n    this.executionResultSubject = new BehaviorSubject(null);\n    this.isExecutingSubject = new BehaviorSubject(false);\n    this.executionResult$ = this.executionResultSubject.asObservable();\n    this.isExecuting$ = this.isExecutingSubject.asObservable();\n  }\n  emitExecutionResult(result) {\n    this.executionResultSubject.next(result);\n  }\n  setExecuting(isExecuting) {\n    this.isExecutingSubject.next(isExecuting);\n  }\n  clearResults() {\n    this.executionResultSubject.next(null);\n  }\n  static {\n    this.ɵfac = function ExecutionService_Factory(t) {\n      return new (t || ExecutionService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ExecutionService,\n      factory: ExecutionService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","ExecutionService","constructor","executionResultSubject","isExecutingSubject","executionResult$","asObservable","isExecuting$","emitExecutionResult","result","next","setExecuting","isExecuting","clearResults","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Bebob\\Dropbox\\University\\MA425 Project in Operations Research\\EYProjectGit\\frontend\\src\\app\\services\\execution.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport interface OutputFile {\r\n  filename: string;\r\n  path: string;\r\n  url: string;\r\n  type: string;\r\n}\r\n\r\nexport interface ExecutionResult {\r\n  command: string;\r\n  output: string;\r\n  error?: string;\r\n  returnCode: number;\r\n  outputFiles?: OutputFile[] | string[];  // Support both new and legacy formats\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExecutionService {\r\n  private executionResultSubject = new BehaviorSubject<ExecutionResult | null>(null);\r\n  private isExecutingSubject = new BehaviorSubject<boolean>(false);\r\n\r\n  executionResult$: Observable<ExecutionResult | null> = this.executionResultSubject.asObservable();\r\n  isExecuting$: Observable<boolean> = this.isExecutingSubject.asObservable();\r\n\r\n  emitExecutionResult(result: ExecutionResult) {\r\n    this.executionResultSubject.next(result);\r\n  }\r\n\r\n  setExecuting(isExecuting: boolean) {\r\n    this.isExecutingSubject.next(isExecuting);\r\n  }\r\n\r\n  clearResults() {\r\n    this.executionResultSubject.next(null);\r\n  }\r\n} "],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAoBlD,OAAM,MAAOC,gBAAgB;EAH7BC,YAAA;IAIU,KAAAC,sBAAsB,GAAG,IAAIH,eAAe,CAAyB,IAAI,CAAC;IAC1E,KAAAI,kBAAkB,GAAG,IAAIJ,eAAe,CAAU,KAAK,CAAC;IAEhE,KAAAK,gBAAgB,GAAuC,IAAI,CAACF,sBAAsB,CAACG,YAAY,EAAE;IACjG,KAAAC,YAAY,GAAwB,IAAI,CAACH,kBAAkB,CAACE,YAAY,EAAE;;EAE1EE,mBAAmBA,CAACC,MAAuB;IACzC,IAAI,CAACN,sBAAsB,CAACO,IAAI,CAACD,MAAM,CAAC;EAC1C;EAEAE,YAAYA,CAACC,WAAoB;IAC/B,IAAI,CAACR,kBAAkB,CAACM,IAAI,CAACE,WAAW,CAAC;EAC3C;EAEAC,YAAYA,CAAA;IACV,IAAI,CAACV,sBAAsB,CAACO,IAAI,CAAC,IAAI,CAAC;EACxC;;;uBAjBWT,gBAAgB;IAAA;EAAA;;;aAAhBA,gBAAgB;MAAAa,OAAA,EAAhBb,gBAAgB,CAAAc,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}