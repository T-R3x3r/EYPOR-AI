{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Bebob/Dropbox/University/MA425 Project in Operations Research/EYProjectGit/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"../../services/execution.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"messagesContainer\"];\nfunction ChatComponent_div_16_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\uD83D\\uDC64 You\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_16_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\uD83E\\uDD16 SQL Assistant\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_16_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"span\", 26);\n    i0.ɵɵtext(2, \"\\uD83D\\uDDC4\\uFE0F\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 27);\n    i0.ɵɵtext(4, \"Schema Information\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChatComponent_div_16_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"strong\");\n    i0.ɵɵtext(2, \"Debug Info:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"pre\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"json\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 1, message_r6));\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"user-message\": a0,\n    \"assistant-message\": a1\n  };\n};\nfunction ChatComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"div\", 18)(3, \"span\", 19);\n    i0.ɵɵtemplate(4, ChatComponent_div_16_span_4_Template, 2, 0, \"span\", 15);\n    i0.ɵɵtemplate(5, ChatComponent_div_16_span_5_Template, 2, 0, \"span\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 20);\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"date\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 21);\n    i0.ɵɵelement(10, \"div\", 22);\n    i0.ɵɵtemplate(11, ChatComponent_div_16_div_11_Template, 5, 0, \"div\", 23);\n    i0.ɵɵtemplate(12, ChatComponent_div_16_div_12_Template, 6, 3, \"div\", 24);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c1, message_r6.role === \"user\", message_r6.role === \"assistant\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", message_r6.role === \"user\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r6.role === \"assistant\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(8, 7, message_r6.timestamp, \"short\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.formatContent(message_r6.content), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r6.sql);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.showDebugInfo && message_r6.role === \"assistant\");\n  }\n}\nfunction ChatComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 17)(2, \"div\", 18)(3, \"span\", 19);\n    i0.ɵɵtext(4, \"\\uD83E\\uDD16 SQL Assistant\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 20);\n    i0.ɵɵtext(6, \"Processing...\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"div\", 21)(8, \"div\", 30);\n    i0.ɵɵelement(9, \"span\")(10, \"span\")(11, \"span\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ChatComponent_div_18_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_18_button_4_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const suggestion_r13 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.useSuggestion(suggestion_r13));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const suggestion_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r12.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", suggestion_r13, \" \");\n  }\n}\nfunction ChatComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"h4\");\n    i0.ɵɵtext(2, \"\\uD83D\\uDCA1 Suggestions:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 32);\n    i0.ɵɵtemplate(4, ChatComponent_div_18_button_4_Template, 2, 2, \"button\", 33);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.suggestions);\n  }\n}\nfunction ChatComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\uD83D\\uDE80 Ask SQL Assistant\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Processing...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ChatComponent {\n  constructor(apiService, executionService) {\n    this.apiService = apiService;\n    this.executionService = executionService;\n    this.filesCreated = new EventEmitter();\n    this.currentMessage = '';\n    this.messages = [];\n    this.isLoading = false;\n    this.showDebugInfo = false;\n    this.shouldAutoScroll = true;\n    this.lastMessageCount = 0;\n    this.currentThreadId = 'default';\n    this.suggestions = [\"How many rows are in each table?\", \"Show me the top 10 records from the main table\", \"What's the total count by category?\", \"Find all records where value > 100\", \"Which table has the most data?\", \"Compare totals across different groups\"];\n  }\n  ngOnInit() {\n    this.addWelcomeMessage();\n    this.lastMessageCount = this.messages.length;\n  }\n  ngAfterViewChecked() {\n    // Only auto-scroll if new messages were added and user hasn't manually scrolled up\n    if (this.messagesContainer && this.shouldAutoScroll && this.messages.length > this.lastMessageCount) {\n      const element = this.messagesContainer.nativeElement;\n      element.scrollTop = element.scrollHeight;\n      this.lastMessageCount = this.messages.length;\n    }\n  }\n  addWelcomeMessage() {\n    this.messages.push({\n      role: 'assistant',\n      content: `🤖 **Advanced Data Analyst**\n\nWelcome! I'm your intelligent data analyst that automatically routes requests through specialized workflows. I can handle SQL queries, create visualizations, and manage database modifications.\n\n**🔄 How I Work:**\nI analyze your request and automatically route it to the appropriate workflow:\n- **SQL Queries** → Direct execution with formatted results\n- **Visualizations** → Python script creation and execution\n- **Database Changes** → Direct execution with detailed change tracking\n\n**📊 SQL Query Examples:**\n- \"Show me the top 10 hubs with highest demand\"\n- \"What is the total supply capacity by region?\"\n- \"List all routes with cost > 500\"\n- \"Find hubs with demand exceeding 15000\"\n- \"Compare opening costs across all locations\"\n\n**📈 Visualization Examples:**\n- \"Create a bar chart of hub demands\"\n- \"Visualize cost distribution across routes\"\n- \"Show a map of all hub locations\"\n- \"Plot demand vs supply capacity\"\n- \"Generate a heatmap of route usage\"\n\n**⚙️ Database Modification Examples:**\n- \"Change maximum hub demand to 20000\"\n- \"Update route supply limit to 15000\"\n- \"Set opening cost to 5000\"\n- \"Modify hub capacity parameter to 25000\"\n- \"Adjust transportation cost factor to 1.5\"\n\n**📍 Table-Specific Modifications:**\n- \"Change maximum demand to 20000 in inputs_params\"\n- \"Update cost to 500 in routes table\" \n- \"Set capacity to 15000 in hubs_data\"\n- \"Modify value to 25000 in parameters table\"\n\n**📋 Database Change Details:**\nWhen you request database changes, I'll show you exactly:\n- Which table and column was modified\n- The old value → new value\n- How many rows were affected\n- The exact SQL that was executed\n\n**🔒 Safety Features:**\n- Detailed change tracking for all database modifications\n- Error recovery with intelligent code fixing\n- Complete execution history tracking\n\n**🎯 Smart Routing:**\nI automatically determine whether you need data analysis, visualization, or parameter changes. Just ask naturally and I'll handle the rest!\n\nAsk me anything about your data!`,\n      timestamp: new Date()\n    });\n  }\n  sendMessage() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.currentMessage.trim() || _this.isLoading) {\n        return;\n      }\n      const messageToSend = _this.currentMessage.trim();\n      _this.currentMessage = '';\n      _this.isLoading = true;\n      // Add user message\n      _this.messages.push({\n        role: 'user',\n        content: messageToSend,\n        timestamp: new Date()\n      });\n      // Reset auto-scroll when sending a new message\n      _this.shouldAutoScroll = true;\n      try {\n        // Call LangGraph API with the simple schema agent\n        console.log('Calling LangGraph API with message:', messageToSend);\n        _this.apiService.langGraphChat(messageToSend).subscribe({\n          next: response => {\n            console.log('LangGraph response received:', response);\n            // Add assistant response\n            const assistantMessage = {\n              role: 'assistant',\n              content: response.response || 'No response received',\n              timestamp: new Date()\n            };\n            _this.messages.push(assistantMessage);\n            // Handle execution results and output files\n            if (response.has_execution_results || response.output_files) {\n              console.log('Processing execution results:', response);\n              // Emit execution result for output display component\n              const executionResult = {\n                command: 'Visualization Script Execution',\n                output: response.execution_output || '',\n                error: response.execution_error || '',\n                returnCode: response.execution_error ? 1 : 0,\n                outputFiles: response.output_files || []\n              };\n              _this.executionService.emitExecutionResult(executionResult);\n              console.log('Emitted execution result with output files:', response.output_files);\n            }\n            // Emit files created event if files were created\n            if (response.created_files && response.created_files.length > 0) {\n              _this.filesCreated.emit();\n            }\n            _this.isLoading = false;\n            _this.scrollToBottom();\n          },\n          error: error => {\n            console.error('LangGraph API error:', error);\n            let errorMessage = 'Unable to process your request.';\n            if (error.error?.error) {\n              errorMessage = error.error.error;\n            } else if (error.message) {\n              errorMessage = error.message;\n            }\n            _this.messages.push({\n              role: 'assistant',\n              content: `❌ **Error**: ${errorMessage}\n\n**Possible solutions:**\n- Make sure you've uploaded a SQLite database file (.db)\n- Check if the backend server is running\n- Verify your API keys are configured correctly\n- Try asking a simpler question about the database structure`,\n              timestamp: new Date()\n            });\n            _this.isLoading = false;\n            _this.scrollToBottom();\n          }\n        });\n      } catch (error) {\n        console.error('Error in sendMessage:', error);\n        _this.messages.push({\n          role: 'assistant',\n          content: `❌ **Error**: Failed to send message to the assistant.\n\nPlease check your connection and try again.`,\n          timestamp: new Date()\n        });\n        _this.isLoading = false;\n        _this.scrollToBottom();\n      }\n    })();\n  }\n  useSuggestion(suggestion) {\n    this.currentMessage = suggestion;\n  }\n  onEnterKey(event) {\n    const keyboardEvent = event;\n    if (!keyboardEvent.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n  clearChat() {\n    this.messages = [];\n    this.addWelcomeMessage();\n  }\n  toggleDebugInfo() {\n    this.showDebugInfo = !this.showDebugInfo;\n  }\n  exportChat() {\n    const chatData = {\n      exported_at: new Date().toISOString(),\n      total_messages: this.messages.length,\n      messages: this.messages\n    };\n    const blob = new Blob([JSON.stringify(chatData, null, 2)], {\n      type: 'application/json'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'sql_chat_history.json';\n    link.click();\n    window.URL.revokeObjectURL(url);\n  }\n  formatContent(content) {\n    // Simple formatting for better display\n    return content.replace(/\\n/g, '<br>');\n  }\n  scrollToBottom() {\n    if (this.messagesContainer) {\n      const element = this.messagesContainer.nativeElement;\n      element.scrollTop = element.scrollHeight;\n    }\n  }\n  onScroll(event) {\n    if (this.messagesContainer) {\n      const element = this.messagesContainer.nativeElement;\n      const isScrolledToBottom = element.scrollHeight - element.clientHeight <= element.scrollTop + 1;\n      this.shouldAutoScroll = isScrolledToBottom;\n    }\n  }\n  static {\n    this.ɵfac = function ChatComponent_Factory(t) {\n      return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.ExecutionService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatComponent,\n      selectors: [[\"app-chat\"]],\n      viewQuery: function ChatComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messagesContainer = _t.first);\n        }\n      },\n      outputs: {\n        filesCreated: \"filesCreated\"\n      },\n      decls: 26,\n      vars: 13,\n      consts: [[1, \"chat-container\"], [1, \"sql-header\"], [1, \"sql-title\"], [1, \"sql-controls\"], [1, \"action-btn\", 3, \"disabled\", \"click\"], [1, \"action-btn\", 3, \"click\"], [1, \"messages-container\", 3, \"scroll\"], [\"messagesContainer\", \"\"], [\"class\", \"message\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"message assistant-message loading-message\", 4, \"ngIf\"], [\"class\", \"suggestions-section\", 4, \"ngIf\"], [1, \"input-area\"], [1, \"input-container\"], [\"placeholder\", \"Ask me anything about your data...\", \"rows\", \"2\", 1, \"message-input\", 3, \"ngModel\", \"disabled\", \"ngModelChange\", \"keydown.enter\"], [1, \"send-btn\", 3, \"disabled\", \"click\"], [4, \"ngIf\"], [1, \"message\", 3, \"ngClass\"], [1, \"message-header\"], [1, \"message-info\"], [1, \"message-role\"], [1, \"message-time\"], [1, \"message-content\"], [1, \"message-text\", 3, \"innerHTML\"], [\"class\", \"sql-badge\", 4, \"ngIf\"], [\"class\", \"debug-info\", 4, \"ngIf\"], [1, \"sql-badge\"], [1, \"sql-icon\"], [1, \"sql-text\"], [1, \"debug-info\"], [1, \"message\", \"assistant-message\", \"loading-message\"], [1, \"loading-dots\"], [1, \"suggestions-section\"], [1, \"suggestions-grid\"], [\"class\", \"suggestion-btn\", 3, \"disabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"suggestion-btn\", 3, \"disabled\", \"click\"]],\n      template: function ChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n          i0.ɵɵtext(4, \"\\uD83E\\uDD16 SQL Query Assistant\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\");\n          i0.ɵɵtext(6, \"Ask questions, get intelligent SQL responses\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 3)(8, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_8_listener() {\n            return ctx.clearChat();\n          });\n          i0.ɵɵtext(9, \" \\uD83D\\uDDD1\\uFE0F Clear \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_10_listener() {\n            return ctx.toggleDebugInfo();\n          });\n          i0.ɵɵtext(11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_12_listener() {\n            return ctx.exportChat();\n          });\n          i0.ɵɵtext(13, \" \\uD83D\\uDCE5 Export \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(14, \"div\", 6, 7);\n          i0.ɵɵlistener(\"scroll\", function ChatComponent_Template_div_scroll_14_listener($event) {\n            return ctx.onScroll($event);\n          });\n          i0.ɵɵtemplate(16, ChatComponent_div_16_Template, 13, 13, \"div\", 8);\n          i0.ɵɵtemplate(17, ChatComponent_div_17_Template, 12, 0, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(18, ChatComponent_div_18_Template, 5, 1, \"div\", 10);\n          i0.ɵɵelementStart(19, \"div\", 11)(20, \"div\", 12)(21, \"textarea\", 13);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_textarea_ngModelChange_21_listener($event) {\n            return ctx.currentMessage = $event;\n          })(\"keydown.enter\", function ChatComponent_Template_textarea_keydown_enter_21_listener($event) {\n            return ctx.onEnterKey($event);\n          });\n          i0.ɵɵtext(22, \"      \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"button\", 14);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_23_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵtemplate(24, ChatComponent_span_24_Template, 2, 0, \"span\", 15);\n          i0.ɵɵtemplate(25, ChatComponent_span_25_Template, 2, 0, \"span\", 15);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", ctx.showDebugInfo ? \"\\uD83D\\uDD0D Hide Debug\" : \"\\uD83D\\uDD0D Debug\", \" \");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.messages.length <= 1);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.suggestions.length > 0);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.currentMessage)(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"loading\", ctx.isLoading);\n          i0.ɵɵproperty(\"disabled\", !ctx.currentMessage.trim() || ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i3.JsonPipe, i3.DatePipe],\n      styles: [\"\\n\\n.chat-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  background: #f8f9fa;\\n}\\n\\n\\n\\n.sql-header[_ngcontent-%COMP%] {\\n  background: linear-gradient(135deg, #FFD700 0%, #FFA500 100%);\\n  color: #333;\\n  padding: 1rem;\\n  border-bottom: 2px solid #e6c200;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.sql-title[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 1.2rem;\\n  font-weight: 600;\\n}\\n\\n.sql-title[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 0.25rem 0 0 0;\\n  font-size: 0.9rem;\\n  opacity: 0.8;\\n}\\n\\n.sql-controls[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 0.5rem;\\n}\\n\\n.action-btn[_ngcontent-%COMP%] {\\n  background: rgba(255, 255, 255, 0.2);\\n  border: 1px solid rgba(255, 255, 255, 0.3);\\n  color: #333;\\n  padding: 0.4rem 0.8rem;\\n  border-radius: 4px;\\n  font-size: 0.85rem;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n}\\n\\n.action-btn[_ngcontent-%COMP%]:hover {\\n  background: rgba(255, 255, 255, 0.3);\\n}\\n\\n.action-btn[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n}\\n\\n\\n\\n.messages-container[_ngcontent-%COMP%] {\\n  flex: 1;\\n  overflow-y: auto;\\n  padding: 1rem;\\n  background: #fff;\\n}\\n\\n\\n\\n.message[_ngcontent-%COMP%] {\\n  margin-bottom: 1rem;\\n  max-width: 100%;\\n}\\n\\n.user-message[_ngcontent-%COMP%] {\\n  margin-left: 2rem;\\n}\\n\\n.assistant-message[_ngcontent-%COMP%] {\\n  margin-right: 2rem;\\n}\\n\\n.message-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 0.5rem;\\n}\\n\\n.message-info[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n}\\n\\n.message-role[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  font-size: 0.9rem;\\n}\\n\\n.message-time[_ngcontent-%COMP%] {\\n  font-size: 0.8rem;\\n  color: #666;\\n}\\n\\n.message-content[_ngcontent-%COMP%] {\\n  background: #f8f9fa;\\n  border: 1px solid #e9ecef;\\n  border-radius: 8px;\\n  padding: 1rem;\\n}\\n\\n.user-message[_ngcontent-%COMP%]   .message-content[_ngcontent-%COMP%] {\\n  background: #e3f2fd;\\n  border-color: #bbdefb;\\n}\\n\\n.message-text[_ngcontent-%COMP%] {\\n  line-height: 1.5;\\n  margin-bottom: 0;\\n}\\n\\n\\n\\n.sql-badge[_ngcontent-%COMP%] {\\n  display: inline-flex;\\n  align-items: center;\\n  gap: 0.3rem;\\n  background: #28a745;\\n  color: white;\\n  padding: 0.25rem 0.5rem;\\n  border-radius: 4px;\\n  font-size: 0.8rem;\\n  margin-top: 0.5rem;\\n}\\n\\n\\n\\n.debug-info[_ngcontent-%COMP%] {\\n  margin-top: 0.5rem;\\n  padding: 0.5rem;\\n  background: #f1f3f4;\\n  border-radius: 4px;\\n  font-size: 0.8rem;\\n}\\n\\n.debug-info[_ngcontent-%COMP%]   pre[_ngcontent-%COMP%] {\\n  margin: 0;\\n  white-space: pre-wrap;\\n  font-family: 'Courier New', monospace;\\n}\\n\\n\\n\\n.loading-message[_ngcontent-%COMP%] {\\n  opacity: 0.8;\\n}\\n\\n.loading-dots[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 0.3rem;\\n  align-items: center;\\n}\\n\\n.loading-dots[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background-color: #666;\\n  animation: _ngcontent-%COMP%_loadingDots 1.4s infinite ease-in-out both;\\n}\\n\\n.loading-dots[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(1) { animation-delay: -0.32s; }\\n.loading-dots[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]:nth-child(2) { animation-delay: -0.16s; }\\n\\n@keyframes _ngcontent-%COMP%_loadingDots {\\n  0%, 80%, 100% {\\n    transform: scale(0);\\n  } 40% {\\n    transform: scale(1);\\n  }\\n}\\n\\n\\n\\n.suggestions-section[_ngcontent-%COMP%] {\\n  padding: 1rem;\\n  background: #f8f9fa;\\n  border-top: 1px solid #e9ecef;\\n}\\n\\n.suggestions-section[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n  margin: 0 0 0.5rem 0;\\n  font-size: 0.9rem;\\n  color: #666;\\n}\\n\\n.suggestions-grid[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 0.5rem;\\n}\\n\\n.suggestion-btn[_ngcontent-%COMP%] {\\n  background: #fff;\\n  border: 1px solid #ddd;\\n  padding: 0.5rem 0.75rem;\\n  border-radius: 6px;\\n  font-size: 0.85rem;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n}\\n\\n.suggestion-btn[_ngcontent-%COMP%]:hover {\\n  background: #f0f0f0;\\n  border-color: #ccc;\\n}\\n\\n.suggestion-btn[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n}\\n\\n\\n\\n.input-area[_ngcontent-%COMP%] {\\n  padding: 1rem;\\n  background: #fff;\\n  border-top: 1px solid #e9ecef;\\n}\\n\\n.input-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 0.5rem;\\n  align-items: flex-end;\\n}\\n\\n.message-input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 0.75rem;\\n  border: 1px solid #ddd;\\n  border-radius: 6px;\\n  font-size: 0.9rem;\\n  font-family: inherit;\\n  resize: vertical;\\n  min-height: 44px;\\n}\\n\\n.message-input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #FFD700;\\n  box-shadow: 0 0 0 2px rgba(255, 215, 0, 0.2);\\n}\\n\\n.send-btn[_ngcontent-%COMP%] {\\n  background: linear-gradient(135deg, #FFD700 0%, #FFA500 100%);\\n  color: #333;\\n  border: none;\\n  padding: 0.75rem 1.5rem;\\n  border-radius: 6px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n  min-width: 140px;\\n}\\n\\n.send-btn[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  transform: translateY(-1px);\\n  box-shadow: 0 4px 8px rgba(255, 215, 0, 0.3);\\n}\\n\\n.send-btn[_ngcontent-%COMP%]:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n  transform: none;\\n  box-shadow: none;\\n}\\n\\n.send-btn.loading[_ngcontent-%COMP%] {\\n  background: #ccc;\\n}\\n\\n\\n\\n\\n\\n@media (max-width: 768px) {\\n  .sql-header[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    gap: 0.5rem;\\n    text-align: center;\\n  }\\n  \\n  .user-message[_ngcontent-%COMP%], .assistant-message[_ngcontent-%COMP%] {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n  \\n  .input-container[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  \\n  .send-btn[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n  \\n\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","message_r6","ɵɵtemplate","ChatComponent_div_16_span_4_Template","ChatComponent_div_16_span_5_Template","ɵɵelement","ChatComponent_div_16_div_11_Template","ChatComponent_div_16_div_12_Template","ɵɵproperty","ɵɵpureFunction2","_c1","role","ɵɵpipeBind2","timestamp","ctx_r1","formatContent","content","ɵɵsanitizeHtml","sql","showDebugInfo","ɵɵlistener","ChatComponent_div_18_button_4_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r15","suggestion_r13","$implicit","ctx_r14","ɵɵnextContext","ɵɵresetView","useSuggestion","ctx_r12","isLoading","ɵɵtextInterpolate1","ChatComponent_div_18_button_4_Template","ctx_r3","suggestions","ChatComponent","constructor","apiService","executionService","filesCreated","currentMessage","messages","shouldAutoScroll","lastMessageCount","currentThreadId","ngOnInit","addWelcomeMessage","length","ngAfterViewChecked","messagesContainer","element","nativeElement","scrollTop","scrollHeight","push","Date","sendMessage","_this","_asyncToGenerator","trim","messageToSend","console","log","langGraphChat","subscribe","next","response","assistantMessage","has_execution_results","output_files","executionResult","command","output","execution_output","error","execution_error","returnCode","outputFiles","emitExecutionResult","created_files","emit","scrollToBottom","errorMessage","message","suggestion","onEnterKey","event","keyboardEvent","shiftKey","preventDefault","clearChat","toggleDebugInfo","exportChat","chatData","exported_at","toISOString","total_messages","blob","Blob","JSON","stringify","type","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","replace","onScroll","isScrolledToBottom","clientHeight","ɵɵdirectiveInject","i1","ApiService","i2","ExecutionService","selectors","viewQuery","ChatComponent_Query","rf","ctx","ChatComponent_Template_button_click_8_listener","ChatComponent_Template_button_click_10_listener","ChatComponent_Template_button_click_12_listener","ChatComponent_Template_div_scroll_14_listener","$event","ChatComponent_div_16_Template","ChatComponent_div_17_Template","ChatComponent_div_18_Template","ChatComponent_Template_textarea_ngModelChange_21_listener","ChatComponent_Template_textarea_keydown_enter_21_listener","ChatComponent_Template_button_click_23_listener","ChatComponent_span_24_Template","ChatComponent_span_25_Template","ɵɵclassProp"],"sources":["C:\\Users\\Bebob\\Dropbox\\University\\MA425 Project in Operations Research\\EYProjectGit\\frontend\\src\\app\\components\\chat\\chat.component.ts","C:\\Users\\Bebob\\Dropbox\\University\\MA425 Project in Operations Research\\EYProjectGit\\frontend\\src\\app\\components\\chat\\chat.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewChecked, Output, EventEmitter } from '@angular/core';\nimport { ApiService } from '../../services/api.service';\nimport { ExecutionService } from '../../services/execution.service';\n\ninterface ChatMessage {\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;\n  sql?: string;\n  results?: any[];\n  row_count?: number;\n  is_general_response?: boolean;\n}\n\ninterface SQLResponse {\n  success: boolean;\n  message?: string;\n  sql?: string;\n  results?: any[];\n  row_count?: number;\n  error?: string;\n  is_general_response?: boolean;\n}\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit, AfterViewChecked {\n  @ViewChild('messagesContainer') messagesContainer!: ElementRef;\n  @Output() filesCreated = new EventEmitter<void>();\n\n  currentMessage: string = '';\n  messages: ChatMessage[] = [];\n  isLoading: boolean = false;\n  showDebugInfo = false;\n  shouldAutoScroll = true;\n  private lastMessageCount = 0;\n  private currentThreadId = 'default';\n  suggestions: string[] = [\n    \"How many rows are in each table?\",\n    \"Show me the top 10 records from the main table\", \n    \"What's the total count by category?\",\n    \"Find all records where value > 100\",\n    \"Which table has the most data?\",\n    \"Compare totals across different groups\"\n  ];\n\n  constructor(\n    private apiService: ApiService,\n    private executionService: ExecutionService\n  ) {}\n\n  ngOnInit(): void {\n    this.addWelcomeMessage();\n    this.lastMessageCount = this.messages.length;\n  }\n\n  ngAfterViewChecked() {\n    // Only auto-scroll if new messages were added and user hasn't manually scrolled up\n    if (this.messagesContainer && this.shouldAutoScroll && this.messages.length > this.lastMessageCount) {\n      const element = this.messagesContainer.nativeElement;\n      element.scrollTop = element.scrollHeight;\n      this.lastMessageCount = this.messages.length;\n    }\n  }\n\n  addWelcomeMessage() {\n    this.messages.push({\n      role: 'assistant',\n      content: `🤖 **Advanced Data Analyst**\n\nWelcome! I'm your intelligent data analyst that automatically routes requests through specialized workflows. I can handle SQL queries, create visualizations, and manage database modifications.\n\n**🔄 How I Work:**\nI analyze your request and automatically route it to the appropriate workflow:\n- **SQL Queries** → Direct execution with formatted results\n- **Visualizations** → Python script creation and execution\n- **Database Changes** → Direct execution with detailed change tracking\n\n**📊 SQL Query Examples:**\n- \"Show me the top 10 hubs with highest demand\"\n- \"What is the total supply capacity by region?\"\n- \"List all routes with cost > 500\"\n- \"Find hubs with demand exceeding 15000\"\n- \"Compare opening costs across all locations\"\n\n**📈 Visualization Examples:**\n- \"Create a bar chart of hub demands\"\n- \"Visualize cost distribution across routes\"\n- \"Show a map of all hub locations\"\n- \"Plot demand vs supply capacity\"\n- \"Generate a heatmap of route usage\"\n\n**⚙️ Database Modification Examples:**\n- \"Change maximum hub demand to 20000\"\n- \"Update route supply limit to 15000\"\n- \"Set opening cost to 5000\"\n- \"Modify hub capacity parameter to 25000\"\n- \"Adjust transportation cost factor to 1.5\"\n\n**📍 Table-Specific Modifications:**\n- \"Change maximum demand to 20000 in inputs_params\"\n- \"Update cost to 500 in routes table\" \n- \"Set capacity to 15000 in hubs_data\"\n- \"Modify value to 25000 in parameters table\"\n\n**📋 Database Change Details:**\nWhen you request database changes, I'll show you exactly:\n- Which table and column was modified\n- The old value → new value\n- How many rows were affected\n- The exact SQL that was executed\n\n**🔒 Safety Features:**\n- Detailed change tracking for all database modifications\n- Error recovery with intelligent code fixing\n- Complete execution history tracking\n\n**🎯 Smart Routing:**\nI automatically determine whether you need data analysis, visualization, or parameter changes. Just ask naturally and I'll handle the rest!\n\nAsk me anything about your data!`,\n      timestamp: new Date()\n    });\n  }\n\n  async sendMessage(): Promise<void> {\n    if (!this.currentMessage.trim() || this.isLoading) {\n      return;\n    }\n\n    const messageToSend = this.currentMessage.trim();\n    this.currentMessage = '';\n    this.isLoading = true;\n\n    // Add user message\n    this.messages.push({\n      role: 'user',\n      content: messageToSend,\n      timestamp: new Date()\n    });\n\n    // Reset auto-scroll when sending a new message\n    this.shouldAutoScroll = true;\n\n    try {\n      // Call LangGraph API with the simple schema agent\n      console.log('Calling LangGraph API with message:', messageToSend);\n      \n      this.apiService.langGraphChat(messageToSend).subscribe({\n        next: (response) => {\n          console.log('LangGraph response received:', response);\n          \n          // Add assistant response\n          const assistantMessage: ChatMessage = {\n            role: 'assistant',\n            content: response.response || 'No response received',\n            timestamp: new Date()\n          };\n          \n          this.messages.push(assistantMessage);\n          \n          // Handle execution results and output files\n          if (response.has_execution_results || response.output_files) {\n            console.log('Processing execution results:', response);\n            \n            // Emit execution result for output display component\n            const executionResult = {\n              command: 'Visualization Script Execution',\n              output: response.execution_output || '',\n              error: response.execution_error || '',\n              returnCode: response.execution_error ? 1 : 0,\n              outputFiles: response.output_files || []\n            };\n            \n            this.executionService.emitExecutionResult(executionResult);\n            console.log('Emitted execution result with output files:', response.output_files);\n          }\n          \n          // Emit files created event if files were created\n          if (response.created_files && response.created_files.length > 0) {\n            this.filesCreated.emit();\n          }\n          \n          this.isLoading = false;\n          this.scrollToBottom();\n        },\n        error: (error) => {\n          console.error('LangGraph API error:', error);\n          \n          let errorMessage = 'Unable to process your request.';\n          if (error.error?.error) {\n            errorMessage = error.error.error;\n          } else if (error.message) {\n            errorMessage = error.message;\n          }\n          \n          this.messages.push({\n            role: 'assistant',\n            content: `❌ **Error**: ${errorMessage}\n\n**Possible solutions:**\n- Make sure you've uploaded a SQLite database file (.db)\n- Check if the backend server is running\n- Verify your API keys are configured correctly\n- Try asking a simpler question about the database structure`,\n            timestamp: new Date()\n          });\n          \n          this.isLoading = false;\n          this.scrollToBottom();\n        }\n      });\n\n    } catch (error) {\n      console.error('Error in sendMessage:', error);\n      this.messages.push({\n        role: 'assistant',\n        content: `❌ **Error**: Failed to send message to the assistant.\n\nPlease check your connection and try again.`,\n        timestamp: new Date()\n      });\n      this.isLoading = false;\n      this.scrollToBottom();\n    }\n  }\n\n  useSuggestion(suggestion: string) {\n    this.currentMessage = suggestion;\n  }\n\n  onEnterKey(event: Event) {\n    const keyboardEvent = event as KeyboardEvent;\n    if (!keyboardEvent.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n\n  clearChat() {\n    this.messages = [];\n    this.addWelcomeMessage();\n  }\n\n  toggleDebugInfo() {\n    this.showDebugInfo = !this.showDebugInfo;\n  }\n\n  exportChat() {\n    const chatData = {\n      exported_at: new Date().toISOString(),\n      total_messages: this.messages.length,\n      messages: this.messages\n    };\n\n    const blob = new Blob([JSON.stringify(chatData, null, 2)], { type: 'application/json' });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'sql_chat_history.json';\n    link.click();\n    window.URL.revokeObjectURL(url);\n  }\n\n  formatContent(content: string): string {\n    // Simple formatting for better display\n    return content.replace(/\\n/g, '<br>');\n  }\n\n  scrollToBottom() {\n    if (this.messagesContainer) {\n      const element = this.messagesContainer.nativeElement;\n      element.scrollTop = element.scrollHeight;\n    }\n  }\n\n  onScroll(event: Event) {\n    if (this.messagesContainer) {\n      const element = this.messagesContainer.nativeElement;\n      const isScrolledToBottom = element.scrollHeight - element.clientHeight <= element.scrollTop + 1;\n      this.shouldAutoScroll = isScrolledToBottom;\n    }\n  }\n\n\n} ","<div class=\"chat-container\">\r\n  <!-- SQL Query Assistant Header -->\r\n  <div class=\"sql-header\">\r\n    <div class=\"sql-title\">\r\n      <h3>🤖 SQL Query Assistant</h3>\r\n      <p>Ask questions, get intelligent SQL responses</p>\r\n    </div>\r\n    <div class=\"sql-controls\">\r\n      <button class=\"action-btn\" (click)=\"clearChat()\" [disabled]=\"isLoading\">\r\n        🗑️ Clear\r\n      </button>\r\n      <button class=\"action-btn\" (click)=\"toggleDebugInfo()\">\r\n        {{ showDebugInfo ? '🔍 Hide Debug' : '🔍 Debug' }}\r\n      </button>\r\n      <button class=\"action-btn\" (click)=\"exportChat()\" [disabled]=\"messages.length <= 1\">\r\n        📥 Export\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Messages Area -->\r\n      <div class=\"messages-container\" #messagesContainer (scroll)=\"onScroll($event)\">\r\n    <div *ngFor=\"let message of messages\" class=\"message\" [ngClass]=\"{'user-message': message.role === 'user', 'assistant-message': message.role === 'assistant'}\">\r\n      \r\n      <!-- Message Header -->\r\n      <div class=\"message-header\">\r\n        <div class=\"message-info\">\r\n          <span class=\"message-role\">\r\n            <span *ngIf=\"message.role === 'user'\">👤 You</span>\r\n            <span *ngIf=\"message.role === 'assistant'\">🤖 SQL Assistant</span>\r\n          </span>\r\n          <span class=\"message-time\">{{ message.timestamp | date:'short' }}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Message Content -->\r\n      <div class=\"message-content\">\r\n        <div class=\"message-text\" [innerHTML]=\"formatContent(message.content)\"></div>\r\n        \r\n        <!-- Schema Badge (if present) -->\r\n        <div *ngIf=\"message.sql\" class=\"sql-badge\">\r\n          <span class=\"sql-icon\">🗄️</span>\r\n          <span class=\"sql-text\">Schema Information</span>\r\n        </div>\r\n        \r\n        <!-- Debug Information -->\r\n        <div *ngIf=\"showDebugInfo && message.role === 'assistant'\" class=\"debug-info\">\r\n          <strong>Debug Info:</strong>\r\n          <pre>{{ message | json }}</pre>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Loading Message -->\r\n    <div *ngIf=\"isLoading\" class=\"message assistant-message loading-message\">\r\n      <div class=\"message-header\">\r\n        <div class=\"message-info\">\r\n          <span class=\"message-role\">🤖 SQL Assistant</span>\r\n          <span class=\"message-time\">Processing...</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"message-content\">\r\n        <div class=\"loading-dots\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Suggested Questions -->\r\n  <div class=\"suggestions-section\" *ngIf=\"suggestions.length > 0\">\r\n    <h4>💡 Suggestions:</h4>\r\n    <div class=\"suggestions-grid\">\r\n      <button *ngFor=\"let suggestion of suggestions\" \r\n              class=\"suggestion-btn\" \r\n              (click)=\"useSuggestion(suggestion)\"\r\n              [disabled]=\"isLoading\">\r\n        {{ suggestion }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Input Area -->\r\n  <div class=\"input-area\">\r\n    <div class=\"input-container\">\r\n      <textarea \r\n        [(ngModel)]=\"currentMessage\" \r\n        placeholder=\"Ask me anything about your data...\" \r\n        class=\"message-input\"\r\n        rows=\"2\"\r\n        (keydown.enter)=\"onEnterKey($event)\"\r\n        [disabled]=\"isLoading\">\r\n      </textarea>\r\n      <button \r\n        class=\"send-btn\" \r\n        (click)=\"sendMessage()\" \r\n        [disabled]=\"!currentMessage.trim() || isLoading\"\r\n        [class.loading]=\"isLoading\">\r\n        <span *ngIf=\"!isLoading\">🚀 Ask SQL Assistant</span>\r\n        <span *ngIf=\"isLoading\">Processing...</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}