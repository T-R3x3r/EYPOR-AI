{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"../../services/database-tracking.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/table\";\nimport * as i6 from \"@angular/material/paginator\";\nimport * as i7 from \"@angular/material/sort\";\nfunction SqlQueryComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Loading database information...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SqlQueryComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8);\n    i0.ɵɵtext(2, \"\\u2715\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h3\");\n    i0.ɵɵtext(4, \"No Database Available\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6, \"Upload CSV or Excel files to automatically create a database, or upload an existing .db file.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SqlQueryComponent_div_6_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"strong\");\n    i0.ɵɵtext(2, \"Size:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.detailedDbInfo.file_size, \" \");\n  }\n}\nfunction SqlQueryComponent_div_6_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"strong\");\n    i0.ɵɵtext(2, \"File:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.detailedDbInfo.filename, \" \");\n  }\n}\nfunction SqlQueryComponent_div_6_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"strong\");\n    i0.ɵɵtext(2, \"Modified:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.detailedDbInfo.modified_date, \" \");\n  }\n}\nfunction SqlQueryComponent_div_6_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"strong\");\n    i0.ɵɵtext(2, \"SQLite:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.detailedDbInfo.sqlite_version, \" \");\n  }\n}\nfunction SqlQueryComponent_div_6_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const table_r16 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", table_r16.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", table_r16.name, \" (\", i0.ɵɵpipeBind1(2, 3, ctx_r7.getTableRowCount(table_r16.name)), \" rows) \");\n  }\n}\nfunction SqlQueryComponent_div_6_div_24_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function SqlQueryComponent_div_6_div_24_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r19.clearSearch());\n    });\n    i0.ɵɵtext(1, \"Clear\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SqlQueryComponent_div_6_div_24_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" (filtered)\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SqlQueryComponent_div_6_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30);\n    i0.ɵɵelement(2, \"input\", 31);\n    i0.ɵɵtemplate(3, SqlQueryComponent_div_6_div_24_button_3_Template, 2, 0, \"button\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 33);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵpipe(7, \"number\");\n    i0.ɵɵtemplate(8, SqlQueryComponent_div_6_div_24_span_8_Template, 2, 0, \"span\", 25);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControl\", ctx_r8.globalSearchControl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.globalSearchControl.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Showing \", i0.ɵɵpipeBind1(6, 5, ctx_r8.filteredRows), \" of \", i0.ɵɵpipeBind1(7, 7, ctx_r8.totalRows), \" rows \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.globalSearchControl.value);\n  }\n}\nfunction SqlQueryComponent_div_6_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Loading table data...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SqlQueryComponent_div_6_div_26_ng_container_3_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 45)(1, \"div\", 46)(2, \"span\", 47);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 48);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const column_r24 = i0.ɵɵnextContext().$implicit;\n    const ctx_r25 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(column_r24);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r25.getColumnType(column_r24));\n  }\n}\nfunction SqlQueryComponent_div_6_div_26_ng_container_3_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 49)(1, \"div\", 50);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r28 = ctx.$implicit;\n    const column_r24 = i0.ɵɵnextContext().$implicit;\n    const ctx_r26 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"title\", ctx_r26.formatCellValue(row_r28[column_r24]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r26.formatCellValue(row_r28[column_r24]), \" \");\n  }\n}\nfunction SqlQueryComponent_div_6_div_26_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 42);\n    i0.ɵɵtemplate(1, SqlQueryComponent_div_6_div_26_ng_container_3_th_1_Template, 6, 2, \"th\", 43);\n    i0.ɵɵtemplate(2, SqlQueryComponent_div_6_div_26_ng_container_3_td_2_Template, 3, 2, \"td\", 44);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const column_r24 = ctx.$implicit;\n    i0.ɵɵproperty(\"matColumnDef\", column_r24);\n  }\n}\nfunction SqlQueryComponent_div_6_div_26_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 51);\n  }\n}\nfunction SqlQueryComponent_div_6_div_26_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 52);\n  }\n}\nconst _c0 = function () {\n  return [25, 50, 100, 250, 500];\n};\nfunction SqlQueryComponent_div_6_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"div\", 36)(2, \"table\", 37);\n    i0.ɵɵtemplate(3, SqlQueryComponent_div_6_div_26_ng_container_3_Template, 3, 1, \"ng-container\", 38);\n    i0.ɵɵtemplate(4, SqlQueryComponent_div_6_div_26_tr_4_Template, 1, 0, \"tr\", 39);\n    i0.ɵɵtemplate(5, SqlQueryComponent_div_6_div_26_tr_5_Template, 1, 0, \"tr\", 40);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"mat-paginator\", 41);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"dataSource\", ctx_r10.tableData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r10.displayedColumns)(\"matHeaderRowDefSticky\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r10.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(7, _c0))(\"pageSize\", 50);\n  }\n}\nfunction SqlQueryComponent_div_6_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"The selected table \\\"\", ctx_r11.selectedTable, \"\\\" appears to be empty or data could not be loaded.\");\n  }\n}\nfunction SqlQueryComponent_div_6_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53)(1, \"p\");\n    i0.ɵɵtext(2, \"Select a table from the dropdown above to view its data.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SqlQueryComponent_div_6_span_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\uD83D\\uDD04 Refresh Database & Table\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SqlQueryComponent_div_6_span_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\uD83D\\uDD04 Refreshing...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SqlQueryComponent_div_6_div_41_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 58)(1, \"strong\");\n    i0.ɵɵtext(2, \"Last Error:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r31.lastError, \" \");\n  }\n}\nfunction SqlQueryComponent_div_6_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 54)(1, \"strong\");\n    i0.ɵɵtext(2, \"Debug Info:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelement(15, \"br\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelement(17, \"br\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelement(19, \"br\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelement(21, \"br\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelement(23, \"br\");\n    i0.ɵɵtemplate(24, SqlQueryComponent_div_6_div_41_div_24_Template, 4, 1, \"div\", 55);\n    i0.ɵɵelementStart(25, \"div\", 56)(26, \"button\", 57);\n    i0.ɵɵlistener(\"click\", function SqlQueryComponent_div_6_div_41_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r32.testDatabaseConnection());\n    });\n    i0.ɵɵtext(27, \" Test Database API \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Database Available: \", !!ctx_r15.databaseInfo, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Total Tables: \", ctx_r15.databaseInfo.total_tables || 0, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Selected Table: \", ctx_r15.selectedTable || \"None\", \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Loading: \", ctx_r15.loadingTableData, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Total Rows: \", ctx_r15.totalRows, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Filtered Rows: \", ctx_r15.filteredRows, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Displayed Columns: \", ctx_r15.displayedColumns.length, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Table Data Type: \", ctx_r15.tableData.constructor.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Data Source Length: \", ctx_r15.tableData.data.length || \"undefined\", \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" API Base URL: \", ctx_r15.getApiBaseUrl(), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r15.lastError);\n  }\n}\nfunction SqlQueryComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10)(2, \"h4\");\n    i0.ɵɵtext(3, \"Database Overview\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 11)(5, \"div\", 12)(6, \"strong\");\n    i0.ɵɵtext(7, \"Tables:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 12)(10, \"strong\");\n    i0.ɵɵtext(11, \"Status:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, SqlQueryComponent_div_6_div_13_Template, 4, 1, \"div\", 13);\n    i0.ɵɵtemplate(14, SqlQueryComponent_div_6_div_14_Template, 4, 1, \"div\", 13);\n    i0.ɵɵtemplate(15, SqlQueryComponent_div_6_div_15_Template, 4, 1, \"div\", 13);\n    i0.ɵɵtemplate(16, SqlQueryComponent_div_6_div_16_Template, 4, 1, \"div\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 14)(18, \"h4\");\n    i0.ɵɵtext(19, \"Select Table to View\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"select\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function SqlQueryComponent_div_6_Template_select_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.selectedTable = $event);\n    })(\"change\", function SqlQueryComponent_div_6_Template_select_change_20_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.loadCompleteTable(ctx_r36.selectedTable));\n    });\n    i0.ɵɵelementStart(21, \"option\", 16);\n    i0.ɵɵtext(22, \"Choose a table...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(23, SqlQueryComponent_div_6_option_23_Template, 3, 5, \"option\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(24, SqlQueryComponent_div_6_div_24_Template, 9, 9, \"div\", 18);\n    i0.ɵɵtemplate(25, SqlQueryComponent_div_6_div_25_Template, 4, 0, \"div\", 2);\n    i0.ɵɵtemplate(26, SqlQueryComponent_div_6_div_26_Template, 7, 8, \"div\", 19);\n    i0.ɵɵtemplate(27, SqlQueryComponent_div_6_div_27_Template, 3, 1, \"div\", 20);\n    i0.ɵɵtemplate(28, SqlQueryComponent_div_6_div_28_Template, 3, 0, \"div\", 20);\n    i0.ɵɵelementStart(29, \"div\", 21)(30, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function SqlQueryComponent_div_6_Template_button_click_30_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.downloadDatabase());\n    });\n    i0.ɵɵtext(31, \" Download Database (.db) \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function SqlQueryComponent_div_6_Template_button_click_32_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.exportDatabase(\"sql\"));\n    });\n    i0.ɵɵtext(33, \" Export as SQL \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function SqlQueryComponent_div_6_Template_button_click_34_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.exportDatabase(\"csv\"));\n    });\n    i0.ɵɵtext(35, \" Export as CSV (Zip) \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function SqlQueryComponent_div_6_Template_button_click_36_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.refreshDatabaseInfo());\n    });\n    i0.ɵɵtemplate(37, SqlQueryComponent_div_6_span_37_Template, 2, 0, \"span\", 25);\n    i0.ɵɵtemplate(38, SqlQueryComponent_div_6_span_38_Template, 2, 0, \"span\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function SqlQueryComponent_div_6_Template_button_click_39_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.toggleDebug());\n    });\n    i0.ɵɵtext(40);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(41, SqlQueryComponent_div_6_div_41_Template, 28, 11, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.databaseInfo.total_tables, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getDatabaseStatus(), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.detailedDbInfo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.detailedDbInfo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.detailedDbInfo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.detailedDbInfo);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.selectedTable);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.databaseInfo.tables);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedTable && !ctx_r2.loadingTableData && ctx_r2.totalRows > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loadingTableData);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedTable && !ctx_r2.loadingTableData && ctx_r2.totalRows > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedTable && !ctx_r2.loadingTableData && ctx_r2.totalRows === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.selectedTable && !ctx_r2.loadingTableData);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.isRefreshing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isRefreshing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isRefreshing);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.showDebug ? \"Hide\" : \"Show\", \" Debug Info \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showDebug);\n  }\n}\nexport class SqlQueryComponent {\n  constructor(apiService, databaseTracking) {\n    this.apiService = apiService;\n    this.databaseTracking = databaseTracking;\n    // Database info\n    this.databaseInfo = null;\n    this.detailedDbInfo = null;\n    this.isLoading = false;\n    // Table browser\n    this.selectedTable = '';\n    this.tableData = new MatTableDataSource([]);\n    this.tableColumns = [];\n    this.displayedColumns = [];\n    this.loadingTableData = false;\n    // Search functionality\n    this.globalSearchControl = new FormControl('');\n    // Statistics\n    this.totalRows = 0;\n    this.filteredRows = 0;\n    // Debug\n    this.lastError = '';\n    this.showDebug = false; // Debug menu hidden by default\n    this.isRefreshing = false; // Track refresh button state\n    this.subscriptions = [];\n  }\n  ngOnInit() {\n    this.loadDatabaseInfo();\n    this.setupSearch();\n    // Subscribe to database changes\n    const changesSub = this.databaseTracking.getChanges().subscribe(changes => {\n      if (changes.length > 0) {\n        console.log('Database changes detected, refreshing...', changes);\n        this.loadDatabaseInfo();\n        // Refresh current table if one is selected\n        if (this.selectedTable) {\n          this.loadCompleteTable(this.selectedTable);\n        }\n      }\n    });\n    this.subscriptions.push(changesSub);\n    // Listen for file uploads by polling database info periodically\n    const refreshInterval = setInterval(() => {\n      this.apiService.getDatabaseInfo().subscribe({\n        next: data => {\n          // Only refresh if there's a meaningful change\n          const currentTableCount = this.databaseInfo?.total_tables || 0;\n          const newTableCount = data?.total_tables || 0;\n          if (newTableCount !== currentTableCount && newTableCount > 0) {\n            console.log('New database detected, refreshing interface...', {\n              oldTableCount: currentTableCount,\n              newTableCount: newTableCount\n            });\n            this.loadDatabaseInfo();\n          }\n        },\n        error: error => {\n          // Silently handle errors during polling\n        }\n      });\n    }, 2000); // Check every 2 seconds\n    // Store interval ID for cleanup\n    this.subscriptions.push({\n      unsubscribe: () => clearInterval(refreshInterval)\n    });\n  }\n  ngAfterViewInit() {\n    // Setup paginator and sort after view init\n    this.tableData.paginator = this.paginator;\n    this.tableData.sort = this.sort;\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n  setupSearch() {\n    const globalSearchSub = this.globalSearchControl.valueChanges.pipe(debounceTime(300), distinctUntilChanged()).subscribe(value => {\n      this.applyGlobalFilter(value || '');\n    });\n    this.subscriptions.push(globalSearchSub);\n  }\n  loadDatabaseInfo() {\n    this.isLoading = true;\n    this.apiService.getDatabaseInfo().subscribe({\n      next: data => {\n        console.log('Database info received:', data);\n        this.databaseInfo = data;\n        if (data && data.database_path) {\n          this.getDetailedDatabaseInfo();\n        }\n        this.isLoading = false;\n      },\n      error: error => {\n        console.error('Error loading database info:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n  getDetailedDatabaseInfo() {\n    this.apiService.getDetailedDatabaseInfo().subscribe({\n      next: data => {\n        console.log('Detailed database info received:', data);\n        if (data && data.database_file) {\n          this.detailedDbInfo = {\n            file_size: `${data.database_file.size_mb} MB (${data.database_file.size_bytes} bytes)`,\n            created_date: data.database_file.created,\n            modified_date: data.database_file.modified,\n            sqlite_version: 'SQLite 3.x',\n            filename: data.database_file.filename,\n            path: data.database_file.path\n          };\n        }\n      },\n      error: error => {\n        console.error('Error loading detailed database info:', error);\n      }\n    });\n  }\n  // New method for comprehensive refresh (called by the refresh button)\n  refreshDatabaseInfo() {\n    console.log('Refreshing database info and current table...');\n    this.isRefreshing = true;\n    // First, refresh the basic database info\n    this.loadDatabaseInfo();\n    // Then refresh detailed info\n    this.getDetailedDatabaseInfo();\n    // If a table is currently selected, reload its data\n    if (this.selectedTable) {\n      console.log('Refreshing current table data:', this.selectedTable);\n      this.loadCompleteTable(this.selectedTable);\n    }\n    // Clear any previous errors\n    this.lastError = '';\n    // Reset refresh state after a brief delay to show feedback\n    setTimeout(() => {\n      this.isRefreshing = false;\n    }, 1500);\n  }\n  // Enhanced table loading - loads ALL data for better searching/filtering\n  loadCompleteTable(tableName) {\n    if (!tableName) {\n      console.log('No table name provided');\n      return;\n    }\n    console.log('Loading table:', tableName);\n    this.selectedTable = tableName;\n    this.loadingTableData = true;\n    this.totalRows = 0;\n    this.filteredRows = 0;\n    this.lastError = '';\n    // Load table data directly and extract columns from the result\n    const sqlQuery = `SELECT * FROM ${tableName}`;\n    console.log('Executing SQL query:', sqlQuery);\n    this.apiService.executeSQL(sqlQuery).subscribe({\n      next: queryResult => {\n        console.log('Query result received:', queryResult);\n        console.log('Result type:', typeof queryResult);\n        console.log('Result success:', queryResult.success);\n        console.log('Result data length:', queryResult.result?.length);\n        if (queryResult.success && queryResult.result && queryResult.result.length > 0) {\n          const data = queryResult.result;\n          this.totalRows = data.length;\n          this.filteredRows = data.length;\n          // Extract column names from the first row of data\n          const firstRow = data[0];\n          this.displayedColumns = Object.keys(firstRow);\n          // Create table columns with default types\n          this.tableColumns = this.displayedColumns.map(colName => ({\n            name: colName,\n            type: this.guessColumnType(firstRow[colName])\n          }));\n          console.log('Extracted columns:', this.displayedColumns);\n          console.log('Setting table data with', data.length, 'rows');\n          // Set up the Material table data source\n          this.tableData = new MatTableDataSource(data);\n          // Reconnect paginator and sort after data change\n          setTimeout(() => {\n            if (this.paginator) {\n              this.tableData.paginator = this.paginator;\n              this.paginator.pageSize = 50; // Default page size\n              this.paginator.pageSizeOptions = [25, 50, 100, 250, 500];\n              console.log('Paginator connected');\n            }\n            if (this.sort) {\n              this.tableData.sort = this.sort;\n              console.log('Sort connected');\n            }\n          });\n          console.log('Table data setup complete. Total rows:', this.totalRows);\n        } else if (queryResult.success && queryResult.result && queryResult.result.length === 0) {\n          // Table exists but is empty\n          console.log('Table is empty');\n          this.totalRows = 0;\n          this.filteredRows = 0;\n          this.displayedColumns = [];\n          this.tableColumns = [];\n          this.tableData = new MatTableDataSource([]);\n          this.lastError = 'Table is empty (0 rows)';\n        } else {\n          console.error('Query failed or no result data:', queryResult);\n          this.totalRows = 0;\n          this.filteredRows = 0;\n          this.displayedColumns = [];\n          this.tableColumns = [];\n          this.tableData = new MatTableDataSource([]);\n          this.lastError = queryResult.error || 'Failed to load table data';\n        }\n        this.loadingTableData = false;\n      },\n      error: error => {\n        console.error('Error loading table data:', error);\n        const errorMsg = error.error?.detail || error.message || JSON.stringify(error);\n        this.lastError = `SQL Error: ${errorMsg}`;\n        this.totalRows = 0;\n        this.filteredRows = 0;\n        this.displayedColumns = [];\n        this.tableColumns = [];\n        this.tableData = new MatTableDataSource([]);\n        this.loadingTableData = false;\n      }\n    });\n  }\n  // Helper method to guess column type from value\n  guessColumnType(value) {\n    if (value === null || value === undefined) return 'TEXT';\n    if (typeof value === 'number') {\n      if (Number.isInteger(value)) return 'INTEGER';\n      return 'REAL';\n    }\n    if (typeof value === 'boolean') return 'BOOLEAN';\n    if (typeof value === 'string') {\n      // Try to detect if it's a date\n      if (value.match(/^\\d{4}-\\d{2}-\\d{2}/) || value.match(/\\d{2}\\/\\d{2}\\/\\d{4}/)) {\n        return 'DATE';\n      }\n      return 'TEXT';\n    }\n    return 'TEXT';\n  }\n  applyGlobalFilter(filterValue) {\n    // Custom filter that searches across all columns\n    this.tableData.filterPredicate = (data, filter) => {\n      const searchTerm = filter.toLowerCase();\n      // Search in all columns\n      return this.displayedColumns.some(column => {\n        const cellValue = data[column];\n        if (cellValue == null) return false;\n        return cellValue.toString().toLowerCase().includes(searchTerm);\n      });\n    };\n    this.tableData.filter = filterValue.trim().toLowerCase();\n    this.filteredRows = this.tableData.filteredData.length;\n    // Reset to first page when filtering\n    if (this.paginator) {\n      this.paginator.firstPage();\n    }\n  }\n  // Utility methods\n  getDatabaseStatus() {\n    return this.databaseInfo?.database_path ? 'Available' : 'Not Available';\n  }\n  getTableRowCount(tableName) {\n    const table = this.databaseInfo?.tables?.find(t => t.name === tableName);\n    return table?.row_count || 0;\n  }\n  formatCellValue(value) {\n    if (value == null) return '';\n    if (typeof value === 'object') return JSON.stringify(value);\n    return value.toString();\n  }\n  clearSearch() {\n    this.globalSearchControl.setValue('');\n  }\n  getColumnType(columnName) {\n    const column = this.tableColumns.find(col => col.name === columnName);\n    return column?.type || 'TEXT';\n  }\n  downloadDatabase() {\n    this.apiService.downloadDatabase().subscribe({\n      next: blob => {\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = 'project_data.db';\n        link.click();\n        window.URL.revokeObjectURL(url);\n      },\n      error: error => {\n        console.error('Error downloading database:', error);\n        alert('Failed to download database');\n      }\n    });\n  }\n  exportDatabase(format) {\n    this.apiService.exportDatabase(format).subscribe({\n      next: blob => {\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        let filename = 'database_export';\n        let extension = '.zip';\n        if (format === 'sql') {\n          filename = 'database_export.sql';\n          extension = '';\n        } else if (format === 'csv') {\n          filename = 'database_export_csv.zip';\n          extension = '';\n        }\n        link.download = filename + extension;\n        link.click();\n        window.URL.revokeObjectURL(url);\n      },\n      error: error => {\n        console.error('Error exporting database:', error);\n        alert('Failed to export database');\n      }\n    });\n  }\n  // Debug methods\n  getApiBaseUrl() {\n    return this.apiService['baseUrl'] || 'Unknown';\n  }\n  toggleDebug() {\n    this.showDebug = !this.showDebug;\n  }\n  testDatabaseConnection() {\n    console.log('Testing database connection...');\n    this.lastError = 'Testing connection...';\n    this.apiService.getDatabaseInfo().subscribe({\n      next: data => {\n        console.log('Database info test successful:', data);\n        this.lastError = `Connection OK: ${data.total_tables} tables found`;\n      },\n      error: error => {\n        console.error('Database connection test failed:', error);\n        const errorMsg = error.error?.detail || error.message || JSON.stringify(error);\n        this.lastError = `Connection Failed: ${errorMsg}`;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function SqlQueryComponent_Factory(t) {\n      return new (t || SqlQueryComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.DatabaseTrackingService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SqlQueryComponent,\n      selectors: [[\"app-sql-query\"]],\n      viewQuery: function SqlQueryComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatPaginator, 5);\n          i0.ɵɵviewQuery(MatSort, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        }\n      },\n      decls: 7,\n      vars: 3,\n      consts: [[1, \"sql-database-container\"], [1, \"section-header\"], [\"class\", \"loading-container\", 4, \"ngIf\"], [\"class\", \"no-database-container\", 4, \"ngIf\"], [\"class\", \"database-content\", 4, \"ngIf\"], [1, \"loading-container\"], [1, \"loading-spinner\"], [1, \"no-database-container\"], [1, \"no-database-icon\"], [1, \"database-content\"], [1, \"database-info-compact\"], [1, \"compact-info-grid\"], [1, \"compact-info-item\"], [\"class\", \"compact-info-item\", 4, \"ngIf\"], [1, \"table-selection\"], [1, \"table-selector\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"search-section\", 4, \"ngIf\"], [\"class\", \"table-display\", 4, \"ngIf\"], [\"class\", \"no-selection\", 4, \"ngIf\"], [1, \"action-buttons\"], [1, \"btn\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [4, \"ngIf\"], [1, \"btn\", \"btn-secondary\", \"debug-toggle\", 3, \"click\"], [\"class\", \"debug-info\", 4, \"ngIf\"], [3, \"value\"], [1, \"search-section\"], [1, \"search-input\"], [\"type\", \"text\", \"placeholder\", \"Search all columns...\", 1, \"search-field\", 3, \"formControl\"], [\"class\", \"clear-btn\", 3, \"click\", 4, \"ngIf\"], [1, \"search-info\"], [1, \"clear-btn\", 3, \"click\"], [1, \"table-display\"], [1, \"table-container\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"data-table\", 3, \"dataSource\"], [3, \"matColumnDef\", 4, \"ngFor\", \"ngForOf\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\", \"matHeaderRowDefSticky\"], [\"mat-row\", \"\", \"class\", \"data-row\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"showFirstLastButtons\", \"\", 1, \"table-paginator\", 3, \"pageSizeOptions\", \"pageSize\"], [3, \"matColumnDef\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"class\", \"table-header\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"class\", \"table-cell\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 1, \"table-header\"], [1, \"header-content\"], [1, \"column-name\"], [1, \"column-type\"], [\"mat-cell\", \"\", 1, \"table-cell\"], [1, \"cell-content\", 3, \"title\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\", 1, \"data-row\"], [1, \"no-selection\"], [1, \"debug-info\"], [\"style\", \"color: red; margin-top: 5px;\", 4, \"ngIf\"], [2, \"margin-top\", \"5px\"], [1, \"btn\", \"btn-secondary\", 2, \"font-size\", \"11px\", \"padding\", \"3px 6px\", 3, \"click\"], [2, \"color\", \"red\", \"margin-top\", \"5px\"]],\n      template: function SqlQueryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n          i0.ɵɵtext(3, \"SQL Database\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(4, SqlQueryComponent_div_4_Template, 4, 0, \"div\", 2);\n          i0.ɵɵtemplate(5, SqlQueryComponent_div_5_Template, 7, 0, \"div\", 3);\n          i0.ɵɵtemplate(6, SqlQueryComponent_div_6_Template, 42, 18, \"div\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && !ctx.databaseInfo);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.databaseInfo);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel, i4.FormControlDirective, i5.MatTable, i5.MatHeaderCellDef, i5.MatHeaderRowDef, i5.MatColumnDef, i5.MatCellDef, i5.MatRowDef, i5.MatHeaderCell, i5.MatCell, i5.MatHeaderRow, i5.MatRow, i6.MatPaginator, i7.MatSort, i7.MatSortHeader, i3.DecimalPipe],\n      styles: [\"\\n\\n.sql-database-container[_ngcontent-%COMP%] {\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  background: white;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\\n}\\n\\n\\n\\n.section-header[_ngcontent-%COMP%] {\\n  margin-bottom: 1rem;\\n}\\n\\n.section-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  font-size: 1rem;\\n  font-weight: 600;\\n  color: #555;\\n  margin: 0 0 1rem 0;\\n  padding-bottom: 0.5rem;\\n  border-bottom: 2px solid #FFE600;\\n}\\n\\n\\n\\n.loading-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 40px 20px;\\n  color: #666;\\n}\\n\\n.loading-spinner[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  border: 4px solid #f3f3f3;\\n  border-top: 4px solid #FFE600;\\n  border-radius: 50%;\\n  animation: _ngcontent-%COMP%_spin 1s linear infinite;\\n  margin-bottom: 15px;\\n}\\n\\n@keyframes _ngcontent-%COMP%_spin {\\n  0% { transform: rotate(0deg); }\\n  100% { transform: rotate(360deg); }\\n}\\n\\n.loading-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 0;\\n  font-size: 14px;\\n}\\n\\n\\n\\n.no-database-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 60px 20px;\\n  text-align: center;\\n  color: #666;\\n}\\n\\n.no-database-icon[_ngcontent-%COMP%] {\\n  font-size: 3em;\\n  color: #ccc;\\n  margin-bottom: 20px;\\n}\\n\\n.no-database-container[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  color: #666;\\n  margin: 0 0 15px 0;\\n  font-size: 1.2em;\\n}\\n\\n.no-database-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  color: #999;\\n  margin: 0;\\n  font-size: 14px;\\n}\\n\\n\\n\\n.database-content[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  min-height: 0; \\n\\n}\\n\\n\\n\\n.database-info-compact[_ngcontent-%COMP%] {\\n  background: #f8f9fa;\\n  border: 1px solid #e0e0e0;\\n  border-radius: 6px;\\n  padding: 12px 16px;\\n  margin-bottom: 20px;\\n}\\n\\n.database-info-compact[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n  color: #555;\\n  margin: 0 0 8px 0;\\n  font-size: 14px;\\n  font-weight: 600;\\n}\\n\\n.compact-info-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n  gap: 8px 16px;\\n}\\n\\n.compact-info-item[_ngcontent-%COMP%] {\\n  font-size: 13px;\\n  color: #666;\\n  line-height: 1.4;\\n}\\n\\n.compact-info-item[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n  color: #333;\\n  margin-right: 6px;\\n  font-weight: 500;\\n}\\n\\n\\n\\n.table-selection[_ngcontent-%COMP%] {\\n  margin-bottom: 25px;\\n}\\n\\n.table-selection[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%] {\\n  color: #555;\\n  margin: 0 0 10px 0;\\n  font-size: 16px;\\n  font-weight: 600;\\n}\\n\\n.table-selector[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px 15px;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  font-size: 14px;\\n  background: white;\\n  color: #333;\\n  cursor: pointer;\\n}\\n\\n.table-selector[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #FFE600;\\n  box-shadow: 0 0 0 2px rgba(255, 230, 0, 0.2);\\n}\\n\\n\\n\\n.search-section[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.search-input[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n.search-field[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 10px 15px;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  font-size: 14px;\\n}\\n\\n.search-field[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #FFE600;\\n  box-shadow: 0 0 0 2px rgba(255, 230, 0, 0.2);\\n}\\n\\n.clear-btn[_ngcontent-%COMP%] {\\n  background: #FFE600;\\n  color: black;\\n  border: none;\\n  padding: 10px 15px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  transition: background-color 0.2s;\\n}\\n\\n.clear-btn[_ngcontent-%COMP%]:hover {\\n  background: #E6CC00;\\n}\\n\\n.search-info[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #666;\\n}\\n\\n\\n\\n.table-display[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  min-height: 0; \\n\\n}\\n\\n.table-container[_ngcontent-%COMP%] {\\n  flex: 1;\\n  overflow: auto;\\n  border: 1px solid #e0e0e0;\\n  border-radius: 4px;\\n  margin-bottom: 20px;\\n}\\n\\n.data-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  background: white;\\n  border-collapse: collapse;\\n}\\n\\n.table-header[_ngcontent-%COMP%] {\\n  background: #f8f9fa;\\n  color: #333;\\n  font-weight: 600;\\n  border-bottom: 2px solid #e0e0e0;\\n  padding: 12px 8px;\\n  text-align: left;\\n  position: sticky;\\n  top: 0;\\n  z-index: 10;\\n}\\n\\n.header-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 4px;\\n}\\n\\n.column-name[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n  color: #333;\\n}\\n\\n.column-type[_ngcontent-%COMP%] {\\n  font-size: 11px;\\n  color: #666;\\n  text-transform: uppercase;\\n  background: #e3f2fd;\\n  padding: 2px 6px;\\n  border-radius: 10px;\\n  align-self: flex-start;\\n}\\n\\n.table-cell[_ngcontent-%COMP%] {\\n  border-bottom: 1px solid #f0f0f0;\\n  padding: 8px;\\n  max-width: 200px;\\n}\\n\\n.cell-content[_ngcontent-%COMP%] {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  font-size: 14px;\\n  color: #333;\\n}\\n\\n.data-row[_ngcontent-%COMP%]:nth-child(even) {\\n  background: #fafafa;\\n}\\n\\n.data-row[_ngcontent-%COMP%]:hover {\\n  background: #fff3cd !important;\\n}\\n\\n\\n\\n.no-selection[_ngcontent-%COMP%] {\\n  text-align: center;\\n  padding: 40px 20px;\\n  color: #666;\\n  font-size: 14px;\\n}\\n\\n\\n\\n.action-buttons[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n  margin-top: 20px;\\n  flex-wrap: wrap;\\n}\\n\\n\\n\\n.debug-toggle[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  padding: 8px 12px;\\n  background: #6c757d;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\n.debug-toggle[_ngcontent-%COMP%]:hover {\\n  background: #5a6268;\\n}\\n\\n.debug-info[_ngcontent-%COMP%] {\\n  background: #f8f9fa;\\n  border: 1px solid #dee2e6;\\n  border-radius: 4px;\\n  padding: 12px;\\n  margin-top: 15px;\\n  font-family: 'Courier New', monospace;\\n  font-size: 11px;\\n  color: #495057;\\n  line-height: 1.4;\\n}\\n\\n\\n\\n.table-container[_ngcontent-%COMP%] {\\n  flex: 1; \\n\\n  min-height: 200px; \\n\\n  overflow: auto;\\n  border: 1px solid #e0e0e0;\\n  border-radius: 8px;\\n  background: white;\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\n  margin-bottom: 10px; \\n\\n}\\n\\n\\n\\n.table-paginator[_ngcontent-%COMP%] {\\n  margin-bottom: 20px; \\n\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  background: #FFE600;\\n  color: black;\\n  border: none;\\n  padding: 8px 16px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  transition: background-color 0.2s;\\n  font-family: inherit;\\n}\\n\\n.btn[_ngcontent-%COMP%]:hover {\\n  background: #E6CC00;\\n}\\n\\n.btn-secondary[_ngcontent-%COMP%] {\\n  background: #6c757d;\\n  color: white;\\n}\\n\\n.btn-secondary[_ngcontent-%COMP%]:hover {\\n  background: #545b62;\\n}\\n\\n\\n\\n.table-paginator[_ngcontent-%COMP%] {\\n  background: #f8f9fa;\\n  border-top: 1px solid #e0e0e0;\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .database-stats[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  \\n  .info-grid[_ngcontent-%COMP%] {\\n    grid-template-columns: 1fr;\\n  }\\n  \\n  .search-input[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  \\n  .action-buttons[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  \\n  .table-container[_ngcontent-%COMP%] {\\n    font-size: 12px;\\n  }\\n}\\n\\n\\n\\n.table-container[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  width: 6px;\\n  height: 6px;\\n}\\n\\n.table-container[_ngcontent-%COMP%]::-webkit-scrollbar-track {\\n  background: #f1f1f1;\\n  border-radius: 3px;\\n}\\n\\n.table-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb {\\n  background: #c1c1c1;\\n  border-radius: 3px;\\n}\\n\\n.table-container[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover {\\n  background: #a8a8a8;\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormControl","MatTableDataSource","MatPaginator","MatSort","debounceTime","distinctUntilChanged","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r3","detailedDbInfo","file_size","ctx_r4","filename","ctx_r5","modified_date","ctx_r6","sqlite_version","ɵɵproperty","table_r16","name","ɵɵtextInterpolate2","ɵɵpipeBind1","ctx_r7","getTableRowCount","ɵɵlistener","SqlQueryComponent_div_6_div_24_button_3_Template_button_click_0_listener","ɵɵrestoreView","_r20","ctx_r19","ɵɵnextContext","ɵɵresetView","clearSearch","ɵɵtemplate","SqlQueryComponent_div_6_div_24_button_3_Template","SqlQueryComponent_div_6_div_24_span_8_Template","ctx_r8","globalSearchControl","value","filteredRows","totalRows","ɵɵtextInterpolate","column_r24","ctx_r25","getColumnType","ctx_r26","formatCellValue","row_r28","ɵɵelementContainerStart","SqlQueryComponent_div_6_div_26_ng_container_3_th_1_Template","SqlQueryComponent_div_6_div_26_ng_container_3_td_2_Template","ɵɵelementContainerEnd","SqlQueryComponent_div_6_div_26_ng_container_3_Template","SqlQueryComponent_div_6_div_26_tr_4_Template","SqlQueryComponent_div_6_div_26_tr_5_Template","ctx_r10","tableData","displayedColumns","ɵɵpureFunction0","_c0","ctx_r11","selectedTable","ctx_r31","lastError","SqlQueryComponent_div_6_div_41_div_24_Template","SqlQueryComponent_div_6_div_41_Template_button_click_26_listener","_r33","ctx_r32","testDatabaseConnection","ctx_r15","databaseInfo","total_tables","loadingTableData","length","constructor","data","getApiBaseUrl","SqlQueryComponent_div_6_div_13_Template","SqlQueryComponent_div_6_div_14_Template","SqlQueryComponent_div_6_div_15_Template","SqlQueryComponent_div_6_div_16_Template","SqlQueryComponent_div_6_Template_select_ngModelChange_20_listener","$event","_r35","ctx_r34","SqlQueryComponent_div_6_Template_select_change_20_listener","ctx_r36","loadCompleteTable","SqlQueryComponent_div_6_option_23_Template","SqlQueryComponent_div_6_div_24_Template","SqlQueryComponent_div_6_div_25_Template","SqlQueryComponent_div_6_div_26_Template","SqlQueryComponent_div_6_div_27_Template","SqlQueryComponent_div_6_div_28_Template","SqlQueryComponent_div_6_Template_button_click_30_listener","ctx_r37","downloadDatabase","SqlQueryComponent_div_6_Template_button_click_32_listener","ctx_r38","exportDatabase","SqlQueryComponent_div_6_Template_button_click_34_listener","ctx_r39","SqlQueryComponent_div_6_Template_button_click_36_listener","ctx_r40","refreshDatabaseInfo","SqlQueryComponent_div_6_span_37_Template","SqlQueryComponent_div_6_span_38_Template","SqlQueryComponent_div_6_Template_button_click_39_listener","ctx_r41","toggleDebug","SqlQueryComponent_div_6_div_41_Template","ctx_r2","getDatabaseStatus","tables","isRefreshing","showDebug","SqlQueryComponent","apiService","databaseTracking","isLoading","tableColumns","subscriptions","ngOnInit","loadDatabaseInfo","setupSearch","changesSub","getChanges","subscribe","changes","console","log","push","refreshInterval","setInterval","getDatabaseInfo","next","currentTableCount","newTableCount","oldTableCount","error","unsubscribe","clearInterval","ngAfterViewInit","paginator","sort","ngOnDestroy","forEach","sub","globalSearchSub","valueChanges","pipe","applyGlobalFilter","database_path","getDetailedDatabaseInfo","database_file","size_mb","size_bytes","created_date","created","modified","path","setTimeout","tableName","sqlQuery","executeSQL","queryResult","success","result","firstRow","Object","keys","map","colName","type","guessColumnType","pageSize","pageSizeOptions","errorMsg","detail","message","JSON","stringify","undefined","Number","isInteger","match","filterValue","filterPredicate","filter","searchTerm","toLowerCase","some","column","cellValue","toString","includes","trim","filteredData","firstPage","table","find","t","row_count","setValue","columnName","col","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","alert","format","extension","ɵɵdirectiveInject","i1","ApiService","i2","DatabaseTrackingService","selectors","viewQuery","SqlQueryComponent_Query","rf","ctx","SqlQueryComponent_div_4_Template","SqlQueryComponent_div_5_Template","SqlQueryComponent_div_6_Template"],"sources":["C:\\Users\\Bebob\\Dropbox\\University\\MA425 Project in Operations Research\\EYProjectGit\\frontend\\src\\app\\components\\sql-query\\sql-query.component.ts","C:\\Users\\Bebob\\Dropbox\\University\\MA425 Project in Operations Research\\EYProjectGit\\frontend\\src\\app\\components\\sql-query\\sql-query.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { ApiService } from '../../services/api.service';\nimport { DatabaseTrackingService } from '../../services/database-tracking.service';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\ninterface DatabaseInfo {\n  tables: any[];\n  total_tables: number;\n  database_path: string;\n  table_mappings: any;\n}\n\ninterface TableColumn {\n  name: string;\n  type: string;\n}\n\n@Component({\n  selector: 'app-sql-query',\n  templateUrl: './sql-query.component.html',\n  styleUrls: ['./sql-query.component.css']\n})\nexport class SqlQueryComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  // Database info\n  databaseInfo: DatabaseInfo | null = null;\n  detailedDbInfo: any = null;\n  isLoading = false;\n\n  // Table browser\n  selectedTable = '';\n  tableData = new MatTableDataSource<any>([]);\n  tableColumns: TableColumn[] = [];\n  displayedColumns: string[] = [];\n  loadingTableData = false;\n\n  // Search functionality\n  globalSearchControl = new FormControl('');\n\n  // Statistics\n  totalRows = 0;\n  filteredRows = 0;\n\n  // Debug\n  lastError = '';\n  showDebug = false; // Debug menu hidden by default\n  isRefreshing = false; // Track refresh button state\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private databaseTracking: DatabaseTrackingService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadDatabaseInfo();\n    this.setupSearch();\n    \n    // Subscribe to database changes\n    const changesSub = this.databaseTracking.getChanges().subscribe(changes => {\n      if (changes.length > 0) {\n        console.log('Database changes detected, refreshing...', changes);\n        this.loadDatabaseInfo();\n        // Refresh current table if one is selected\n        if (this.selectedTable) {\n          this.loadCompleteTable(this.selectedTable);\n        }\n      }\n    });\n    this.subscriptions.push(changesSub);\n\n    // Listen for file uploads by polling database info periodically\n    const refreshInterval = setInterval(() => {\n      this.apiService.getDatabaseInfo().subscribe({\n        next: (data) => {\n          // Only refresh if there's a meaningful change\n          const currentTableCount = this.databaseInfo?.total_tables || 0;\n          const newTableCount = data?.total_tables || 0;\n          \n          if (newTableCount !== currentTableCount && newTableCount > 0) {\n            console.log('New database detected, refreshing interface...', {\n              oldTableCount: currentTableCount,\n              newTableCount: newTableCount\n            });\n            this.loadDatabaseInfo();\n          }\n        },\n        error: (error) => {\n          // Silently handle errors during polling\n        }\n      });\n    }, 2000); // Check every 2 seconds\n\n    // Store interval ID for cleanup\n    this.subscriptions.push({\n      unsubscribe: () => clearInterval(refreshInterval)\n    } as any);\n  }\n\n  ngAfterViewInit(): void {\n    // Setup paginator and sort after view init\n    this.tableData.paginator = this.paginator;\n    this.tableData.sort = this.sort;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  setupSearch(): void {\n    const globalSearchSub = this.globalSearchControl.valueChanges\n      .pipe(debounceTime(300), distinctUntilChanged())\n      .subscribe(value => {\n        this.applyGlobalFilter(value || '');\n      });\n    \n    this.subscriptions.push(globalSearchSub);\n  }\n\n  loadDatabaseInfo(): void {\n    this.isLoading = true;\n    this.apiService.getDatabaseInfo().subscribe({\n      next: (data) => {\n        console.log('Database info received:', data);\n        this.databaseInfo = data;\n        if (data && data.database_path) {\n          this.getDetailedDatabaseInfo();\n        }\n        this.isLoading = false;\n      },\n      error: (error) => {\n        console.error('Error loading database info:', error);\n        this.isLoading = false;\n      }\n    });\n  }\n\n  getDetailedDatabaseInfo(): void {\n    this.apiService.getDetailedDatabaseInfo().subscribe({\n      next: (data) => {\n        console.log('Detailed database info received:', data);\n        if (data && data.database_file) {\n          this.detailedDbInfo = {\n            file_size: `${data.database_file.size_mb} MB (${data.database_file.size_bytes} bytes)`,\n            created_date: data.database_file.created,\n            modified_date: data.database_file.modified,\n            sqlite_version: 'SQLite 3.x',\n            filename: data.database_file.filename,\n            path: data.database_file.path\n          };\n        }\n      },\n      error: (error) => {\n        console.error('Error loading detailed database info:', error);\n      }\n    });\n  }\n\n  // New method for comprehensive refresh (called by the refresh button)\n  refreshDatabaseInfo(): void {\n    console.log('Refreshing database info and current table...');\n    this.isRefreshing = true;\n    \n    // First, refresh the basic database info\n    this.loadDatabaseInfo();\n    \n    // Then refresh detailed info\n    this.getDetailedDatabaseInfo();\n    \n    // If a table is currently selected, reload its data\n    if (this.selectedTable) {\n      console.log('Refreshing current table data:', this.selectedTable);\n      this.loadCompleteTable(this.selectedTable);\n    }\n    \n    // Clear any previous errors\n    this.lastError = '';\n    \n    // Reset refresh state after a brief delay to show feedback\n    setTimeout(() => {\n      this.isRefreshing = false;\n    }, 1500);\n  }\n\n  // Enhanced table loading - loads ALL data for better searching/filtering\n  loadCompleteTable(tableName: string): void {\n    if (!tableName) {\n      console.log('No table name provided');\n      return;\n    }\n    \n    console.log('Loading table:', tableName);\n    this.selectedTable = tableName;\n    this.loadingTableData = true;\n    this.totalRows = 0;\n    this.filteredRows = 0;\n    this.lastError = '';\n    \n    // Load table data directly and extract columns from the result\n    const sqlQuery = `SELECT * FROM ${tableName}`;\n    console.log('Executing SQL query:', sqlQuery);\n    \n    this.apiService.executeSQL(sqlQuery).subscribe({\n      next: (queryResult) => {\n        console.log('Query result received:', queryResult);\n        console.log('Result type:', typeof queryResult);\n        console.log('Result success:', queryResult.success);\n        console.log('Result data length:', queryResult.result?.length);\n        \n        if (queryResult.success && queryResult.result && queryResult.result.length > 0) {\n          const data = queryResult.result;\n          this.totalRows = data.length;\n          this.filteredRows = data.length;\n          \n          // Extract column names from the first row of data\n          const firstRow = data[0];\n          this.displayedColumns = Object.keys(firstRow);\n          \n          // Create table columns with default types\n          this.tableColumns = this.displayedColumns.map(colName => ({\n            name: colName,\n            type: this.guessColumnType(firstRow[colName])\n          }));\n          \n          console.log('Extracted columns:', this.displayedColumns);\n          console.log('Setting table data with', data.length, 'rows');\n          \n          // Set up the Material table data source\n          this.tableData = new MatTableDataSource(data);\n          \n          // Reconnect paginator and sort after data change\n          setTimeout(() => {\n            if (this.paginator) {\n              this.tableData.paginator = this.paginator;\n              this.paginator.pageSize = 50; // Default page size\n              this.paginator.pageSizeOptions = [25, 50, 100, 250, 500];\n              console.log('Paginator connected');\n            }\n            if (this.sort) {\n              this.tableData.sort = this.sort;\n              console.log('Sort connected');\n            }\n          });\n          \n          console.log('Table data setup complete. Total rows:', this.totalRows);\n        } else if (queryResult.success && queryResult.result && queryResult.result.length === 0) {\n          // Table exists but is empty\n          console.log('Table is empty');\n          this.totalRows = 0;\n          this.filteredRows = 0;\n          this.displayedColumns = [];\n          this.tableColumns = [];\n          this.tableData = new MatTableDataSource<any>([]);\n          this.lastError = 'Table is empty (0 rows)';\n        } else {\n          console.error('Query failed or no result data:', queryResult);\n          this.totalRows = 0;\n          this.filteredRows = 0;\n          this.displayedColumns = [];\n          this.tableColumns = [];\n          this.tableData = new MatTableDataSource<any>([]);\n          this.lastError = queryResult.error || 'Failed to load table data';\n        }\n        \n        this.loadingTableData = false;\n      },\n      error: (error) => {\n        console.error('Error loading table data:', error);\n        const errorMsg = error.error?.detail || error.message || JSON.stringify(error);\n        this.lastError = `SQL Error: ${errorMsg}`;\n        this.totalRows = 0;\n        this.filteredRows = 0;\n        this.displayedColumns = [];\n        this.tableColumns = [];\n        this.tableData = new MatTableDataSource<any>([]);\n        this.loadingTableData = false;\n      }\n    });\n  }\n\n  // Helper method to guess column type from value\n  private guessColumnType(value: any): string {\n    if (value === null || value === undefined) return 'TEXT';\n    if (typeof value === 'number') {\n      if (Number.isInteger(value)) return 'INTEGER';\n      return 'REAL';\n    }\n    if (typeof value === 'boolean') return 'BOOLEAN';\n    if (typeof value === 'string') {\n      // Try to detect if it's a date\n      if (value.match(/^\\d{4}-\\d{2}-\\d{2}/) || value.match(/\\d{2}\\/\\d{2}\\/\\d{4}/)) {\n        return 'DATE';\n      }\n      return 'TEXT';\n    }\n    return 'TEXT';\n  }\n\n  applyGlobalFilter(filterValue: string): void {\n    // Custom filter that searches across all columns\n    this.tableData.filterPredicate = (data: any, filter: string) => {\n      const searchTerm = filter.toLowerCase();\n      \n      // Search in all columns\n      return this.displayedColumns.some(column => {\n        const cellValue = data[column];\n        if (cellValue == null) return false;\n        return cellValue.toString().toLowerCase().includes(searchTerm);\n      });\n    };\n    \n    this.tableData.filter = filterValue.trim().toLowerCase();\n    this.filteredRows = this.tableData.filteredData.length;\n    \n    // Reset to first page when filtering\n    if (this.paginator) {\n      this.paginator.firstPage();\n    }\n  }\n\n  // Utility methods\n  getDatabaseStatus(): string {\n    return this.databaseInfo?.database_path ? 'Available' : 'Not Available';\n  }\n\n  getTableRowCount(tableName: string): number {\n    const table = this.databaseInfo?.tables?.find(t => t.name === tableName);\n    return table?.row_count || 0;\n  }\n\n  formatCellValue(value: any): string {\n    if (value == null) return '';\n    if (typeof value === 'object') return JSON.stringify(value);\n    return value.toString();\n  }\n\n  clearSearch(): void {\n    this.globalSearchControl.setValue('');\n  }\n\n  getColumnType(columnName: string): string {\n    const column = this.tableColumns.find(col => col.name === columnName);\n    return column?.type || 'TEXT';\n  }\n\n  downloadDatabase(): void {\n    this.apiService.downloadDatabase().subscribe({\n      next: (blob) => {\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = 'project_data.db';\n        link.click();\n        window.URL.revokeObjectURL(url);\n      },\n      error: (error) => {\n        console.error('Error downloading database:', error);\n        alert('Failed to download database');\n      }\n    });\n  }\n\n  exportDatabase(format: string): void {\n    this.apiService.exportDatabase(format).subscribe({\n      next: (blob) => {\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        \n        let filename = 'database_export';\n        let extension = '.zip';\n        \n        if (format === 'sql') {\n          filename = 'database_export.sql';\n          extension = '';\n        } else if (format === 'csv') {\n          filename = 'database_export_csv.zip';\n          extension = '';\n        }\n        \n        link.download = filename + extension;\n        link.click();\n        window.URL.revokeObjectURL(url);\n      },\n      error: (error) => {\n        console.error('Error exporting database:', error);\n        alert('Failed to export database');\n      }\n    });\n  }\n\n  // Debug methods\n  getApiBaseUrl(): string {\n    return this.apiService['baseUrl'] || 'Unknown';\n  }\n\n  toggleDebug(): void {\n    this.showDebug = !this.showDebug;\n  }\n\n  testDatabaseConnection(): void {\n    console.log('Testing database connection...');\n    this.lastError = 'Testing connection...';\n    \n    this.apiService.getDatabaseInfo().subscribe({\n      next: (data) => {\n        console.log('Database info test successful:', data);\n        this.lastError = `Connection OK: ${data.total_tables} tables found`;\n      },\n      error: (error) => {\n        console.error('Database connection test failed:', error);\n        const errorMsg = error.error?.detail || error.message || JSON.stringify(error);\n        this.lastError = `Connection Failed: ${errorMsg}`;\n      }\n    });\n  }\n} ","<div class=\"sql-database-container\">\n  <!-- Header -->\n  <div class=\"section-header\">\n    <h3>SQL Database</h3>\n  </div>\n\n  <!-- Loading State -->\n  <div *ngIf=\"isLoading\" class=\"loading-container\">\n    <div class=\"loading-spinner\"></div>\n    <p>Loading database information...</p>\n  </div>\n\n  <!-- No Database State -->\n  <div *ngIf=\"!isLoading && !databaseInfo\" class=\"no-database-container\">\n    <div class=\"no-database-icon\">✕</div>\n    <h3>No Database Available</h3>\n    <p>Upload CSV or Excel files to automatically create a database, or upload an existing .db file.</p>\n  </div>\n\n  <!-- Database Content -->\n  <div *ngIf=\"!isLoading && databaseInfo\" class=\"database-content\">\n    \n    <!-- Compact Database Information -->\n    <div class=\"database-info-compact\">\n      <h4>Database Overview</h4>\n      <div class=\"compact-info-grid\">\n        <div class=\"compact-info-item\">\n          <strong>Tables:</strong> {{ databaseInfo.total_tables }}\n        </div>\n        <div class=\"compact-info-item\">\n          <strong>Status:</strong> {{ getDatabaseStatus() }}\n        </div>\n        <div class=\"compact-info-item\" *ngIf=\"detailedDbInfo\">\n          <strong>Size:</strong> {{ detailedDbInfo.file_size }}\n        </div>\n        <div class=\"compact-info-item\" *ngIf=\"detailedDbInfo\">\n          <strong>File:</strong> {{ detailedDbInfo.filename }}\n        </div>\n        <div class=\"compact-info-item\" *ngIf=\"detailedDbInfo\">\n          <strong>Modified:</strong> {{ detailedDbInfo.modified_date }}\n        </div>\n        <div class=\"compact-info-item\" *ngIf=\"detailedDbInfo\">\n          <strong>SQLite:</strong> {{ detailedDbInfo.sqlite_version }}\n        </div>\n      </div>\n    </div>\n\n    <!-- Table Selection -->\n    <div class=\"table-selection\">\n      <h4>Select Table to View</h4>\n      <select [(ngModel)]=\"selectedTable\" (change)=\"loadCompleteTable(selectedTable)\" class=\"table-selector\">\n        <option value=\"\">Choose a table...</option>\n        <option *ngFor=\"let table of databaseInfo.tables\" [value]=\"table.name\">\n          {{ table.name }} ({{ getTableRowCount(table.name) | number }} rows)\n        </option>\n      </select>\n    </div>\n\n    <!-- Search Box -->\n    <div *ngIf=\"selectedTable && !loadingTableData && totalRows > 0\" class=\"search-section\">\n      <div class=\"search-input\">\n        <input type=\"text\" \n               [formControl]=\"globalSearchControl\" \n               placeholder=\"Search all columns...\" \n               class=\"search-field\">\n        <button *ngIf=\"globalSearchControl.value\" (click)=\"clearSearch()\" class=\"clear-btn\">Clear</button>\n      </div>\n      <div class=\"search-info\">\n        Showing {{ filteredRows | number }} of {{ totalRows | number }} rows\n        <span *ngIf=\"globalSearchControl.value\"> (filtered)</span>\n      </div>\n    </div>\n\n    <!-- Loading Table Data -->\n    <div *ngIf=\"loadingTableData\" class=\"loading-container\">\n      <div class=\"loading-spinner\"></div>\n      <p>Loading table data...</p>\n    </div>\n\n    <!-- Table Data Display -->\n    <div *ngIf=\"selectedTable && !loadingTableData && totalRows > 0\" class=\"table-display\">\n      \n      <!-- Data Table -->\n      <div class=\"table-container\">\n        <table mat-table [dataSource]=\"tableData\" class=\"data-table\" matSort>\n          \n          <!-- Dynamic columns -->\n          <ng-container *ngFor=\"let column of displayedColumns\" [matColumnDef]=\"column\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-header\">\n              <div class=\"header-content\">\n                <span class=\"column-name\">{{ column }}</span>\n                <span class=\"column-type\">{{ getColumnType(column) }}</span>\n              </div>\n            </th>\n            <td mat-cell *matCellDef=\"let row\" class=\"table-cell\">\n              <div class=\"cell-content\" [title]=\"formatCellValue(row[column])\">\n                {{ formatCellValue(row[column]) }}\n              </div>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"data-row\"></tr>\n        </table>\n      </div>\n\n      <!-- Pagination -->\n      <mat-paginator \n        [pageSizeOptions]=\"[25, 50, 100, 250, 500]\" \n        [pageSize]=\"50\"\n        showFirstLastButtons\n        class=\"table-paginator\">\n      </mat-paginator>\n    </div>\n\n    <!-- No Data in Selected Table -->\n    <div *ngIf=\"selectedTable && !loadingTableData && totalRows === 0\" class=\"no-selection\">\n      <p>The selected table \"{{ selectedTable }}\" appears to be empty or data could not be loaded.</p>\n    </div>\n\n    <!-- No Table Selected -->\n    <div *ngIf=\"!selectedTable && !loadingTableData\" class=\"no-selection\">\n      <p>Select a table from the dropdown above to view its data.</p>\n    </div>\n\n    <!-- Action Buttons -->\n    <div class=\"action-buttons\">\n      <button class=\"btn\" (click)=\"downloadDatabase()\">\n        Download Database (.db)\n      </button>\n      \n      <button class=\"btn btn-secondary\" (click)=\"exportDatabase('sql')\">\n        Export as SQL\n      </button>\n      \n      <button class=\"btn btn-secondary\" (click)=\"exportDatabase('csv')\">\n        Export as CSV (Zip)\n      </button>\n      \n      <button class=\"btn btn-secondary\" (click)=\"refreshDatabaseInfo()\" [disabled]=\"isRefreshing\">\n        <span *ngIf=\"!isRefreshing\">🔄 Refresh Database & Table</span>\n        <span *ngIf=\"isRefreshing\">🔄 Refreshing...</span>\n      </button>\n\n      <button class=\"btn btn-secondary debug-toggle\" (click)=\"toggleDebug()\">\n        {{ showDebug ? 'Hide' : 'Show' }} Debug Info\n      </button>\n    </div>\n\n    <!-- Debug Information (conditionally shown) -->\n    <div *ngIf=\"showDebug\" class=\"debug-info\">\n      <strong>Debug Info:</strong><br>\n      Database Available: {{ !!databaseInfo }}<br>\n      Total Tables: {{ databaseInfo.total_tables || 0 }}<br>\n      Selected Table: {{ selectedTable || 'None' }}<br>\n      Loading: {{ loadingTableData }}<br>\n      Total Rows: {{ totalRows }}<br>\n      Filtered Rows: {{ filteredRows }}<br>\n      Displayed Columns: {{ displayedColumns.length }}<br>\n      Table Data Type: {{ tableData.constructor.name }}<br>\n      Data Source Length: {{ tableData.data.length || 'undefined' }}<br>\n      API Base URL: {{ getApiBaseUrl() }}<br>\n      <div *ngIf=\"lastError\" style=\"color: red; margin-top: 5px;\">\n        <strong>Last Error:</strong> {{ lastError }}\n      </div>\n      <div style=\"margin-top: 5px;\">\n        <button class=\"btn btn-secondary\" (click)=\"testDatabaseConnection()\" style=\"font-size: 11px; padding: 3px 6px;\">\n          Test Database API\n        </button>\n      </div>\n    </div>\n  </div>\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}